import java.util.concurrent.Semaphore;

class Filosofo extends Thread {
    private int id;
    private Semaphore tenedorIzquierdo, tenedorDerecho;

    public Filosofo(int id, Semaphore tenedorIzquierdo, Semaphore tenedorDerecho) {
        this.id = id;
        this.tenedorIzquierdo = tenedorIzquierdo;
        this.tenedorDerecho = tenedorDerecho;
    }

    private void pensar() throws InterruptedException {
        System.out.println("Filósofo " + id + " está pensando...");
        Thread.sleep((int) (Math.random() * 2000));
    }

    private void comer() throws InterruptedException {
        System.out.println("Filósofo " + id + " está comiendo...");
        Thread.sleep((int) (Math.random() * 3000));
    }

    @Override
    public void run() {
        try {
            while (true) {
                pensar(); 

                if (id % 2 == 0) { 
                    tenedorIzquierdo.acquire();
                    System.out.println("Filósofo " + id + " levantó el tenedor izquierdo.");
                    tenedorDerecho.acquire();
                    System.out.println("Filósofo " + id + " levantó el tenedor derecho.");
                } else { 
                    tenedorDerecho.acquire();
                    System.out.println("Filósofo " + id + " levantó el tenedor derecho.");
                    tenedorIzquierdo.acquire();
                    System.out.println("Filósofo " + id + " levantó el tenedor izquierdo.");
                }

                comer();

                tenedorIzquierdo.release();
                System.out.println("Filósofo " + id + " soltó el tenedor izquierdo.");
                tenedorDerecho.release();
                System.out.println("Filósofo " + id + " soltó el tenedor derecho.");
            }
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }
    }
}


public class FilosofosComensalesSemaforos {
    public static void main(String[] args) {
        Semaphore[] tenedores = new Semaphore[5];
        for (int i = 0; i < 5; i++) {
            tenedores[i] = new Semaphore(1); 
        }

        Filosofo[] filosofos = new Filosofo[5];
        for (int i = 0; i < 5; i++) {
            Semaphore tenedorIzquierdo = tenedores[i];
            Semaphore tenedorDerecho = tenedores[(i + 1) % 5];

            filosofos[i] = new Filosofo(i + 1, tenedorIzquierdo, tenedorDerecho);
            filosofos[i].start();
        }
    }
}
